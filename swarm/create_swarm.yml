---
- name: Install Docker on all swarm nodes
  hosts: swarm_nodes
  gather_facts: true
  become: yes
  tasks:
    - name: Update package lists
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - software-properties-common
          - ca-certificates
          - curl
        state: present

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker stable repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: yes

    - name: Ensure Docker service is started and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes
        
    - name: Add user to the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      register: docker_version

    - name: Print Docker version
      ansible.builtin.debug:
        var: docker_version.stdout

- name: Create Docker Swarm cluster
  hosts: manager1
  gather_facts: false
  tasks:
    - name: Ensure Docker is installed
      ansible.builtin.service:
        name: docker
        state: started
      become: true

    - name: Ensure Docker SDK for Python is installed
      ansible.builtin.apt:
        name: python3-docker
        state: present
      become: true

    - name: Initialize a new swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"
      register: swarm_info

- name: Join worker nodes to Docker Swarm
  hosts: worker1,worker2
  gather_facts: false
  tasks:
    - name: Ensure Docker is installed
      ansible.builtin.service:
        name: docker
        state: started
      become: true

    - name: Ensure Docker SDK for Python is installed
      ansible.builtin.apt:
        name: python3-docker
        state: present
      become: true

    - name: Add nodes to the swarm
      community.docker.docker_swarm:
        state: join
        advertise_addr: "{{ ansible_host }}"
        join_token: "{{ hostvars['manager1'].swarm_info.swarm_facts.JoinTokens.Worker }}"
        remote_addrs:
          - "{{ hostvars['manager1'].ansible_host }}:2377"

- name: Verify Docker Swarm cluster
  hosts: manager1
  gather_facts: no
  tasks:
    - name: Get registered nodes
      community.docker.docker_swarm_info:
        nodes: true
      register: swarm_status

    - name: Print registered nodes
      ansible.builtin.debug:
        var: swarm_status.nodes

- name: Enable IP forwarding for ingress networking
  hosts: swarm_nodes
  become: yes
  tasks:
    - name: Enable IP forwarding
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes

    - name: Reboot the system
      ansible.builtin.reboot: